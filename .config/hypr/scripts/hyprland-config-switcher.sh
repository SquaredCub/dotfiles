#!/bin/bash

# Hyprland Config Switcher
# Automatically detects location and switches monitor/workspace configs

HYPR_CONFIG_DIR="$HOME/dotfiles/.config/hypr/configs"
MONITORS_CONF="$HYPR_CONFIG_DIR/monitors.conf"
WORKSPACES_CONF="$HYPR_CONFIG_DIR/workspaces.conf"

# Function to detect location based on available monitors
detect_location() {
    # Get connected monitors (plain text output)
    monitors=$(hyprctl monitors | grep "Monitor" | awk '{print $2}')
    
    # Check for work setup (DP-1 and DVI-D-1)
    if echo "$monitors" | grep -q "DP-1" && echo "$monitors" | grep -q "DVI-D-1"; then
        echo "work"
    # Check for home setup (HDMI-A-3 and DP-3)
    elif echo "$monitors" | grep -q "HDMI-A-3" && echo "$monitors" | grep -q "DP-3"; then
        echo "home"
    else
        echo "unknown"
    fi
}

# Function to write monitors config
write_monitors_config() {
    local location=$1
    cat > "$MONITORS_CONF" << EOF
# See https://wiki.hypr.land/Configuring/Monitors/
# Auto-generated by hyprland-config-switcher.sh
EOF

    case $location in
        "home")
            cat >> "$MONITORS_CONF" << EOF
# HOME
monitor=HDMI-A-3,1920x1080@60.00,0x0,1
monitor=DP-3,2560x1440@143.97,1920x-400,1
# WORK (disabled)
# monitor=DP-1,1920x1080@60.00,0x0,1
# monitor=DVI-D-1,1920x1080@60.00,1920x0,1
# GENERIC
monitor=,highres,auto,auto
cursor {
    default_monitor = DP-3
}
EOF
            ;;
        "work")
            cat >> "$MONITORS_CONF" << EOF
# HOME (disabled)
# monitor=HDMI-A-3,1920x1080@60.00,0x0,1
# monitor=DP-3,2560x1440@143.97,1920x-400,1
# WORK
monitor=DP-1,1920x1080@60.00,0x0,1
monitor=DVI-D-1,1920x1080@60.00,1920x0,1
# GENERIC
monitor=,highres,auto,auto
cursor {
    default_monitor = DVI-D-1
}
EOF
            ;;
        *)
            cat >> "$MONITORS_CONF" << EOF
# GENERIC (fallback)
monitor=,highres,auto,auto
cursor {
    default_monitor = 
}
EOF
            ;;
    esac
}

# Function to write workspaces config
write_workspaces_config() {
    local location=$1
    cat > "$WORKSPACES_CONF" << EOF
# See https://wiki.hypr.land/Configuring/Window-Rules/ for more
# See https://wiki.hypr.land/Configuring/Workspace-Rules/ for workspace rules
# Auto-generated by hyprland-config-switcher.sh

# Example windowrule
# windowrule = float,class:^(kitty)$,title:^(kitty)$
# Ignore maximize requests from apps. You'll probably like this.
windowrule = suppressevent maximize, class:.*
# Fix some dragging issues with XWayland
windowrule = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

EOF

    case $location in
        "home")
            cat >> "$WORKSPACES_CONF" << EOF
### Home Configuration
# Bind workspace 1, 3, 5, etc. to left monitor
workspace=1,monitor:HDMI-A-3
workspace=3,monitor:HDMI-A-3
workspace=5,monitor:HDMI-A-3
workspace=7,monitor:HDMI-A-3
workspace=9,monitor:HDMI-A-3
# Bind workspace 2, 4, 6, etc. to right monitor
workspace=2,monitor:DP-3
workspace=4,monitor:DP-3
workspace=6,monitor:DP-3
workspace=8,monitor:DP-3
workspace=10,monitor:DP-3
### Office Configuration (disabled)
# Bind workspace 1, 3, 5, etc. to left monitor
# workspace=1,monitor:DP-1
# workspace=3,monitor:DP-1
# workspace=5,monitor:DP-1
# workspace=7,monitor:DP-1
# workspace=9,monitor:DP-1
# Bind workspace 2, 4, 6, etc. to right monitor
# workspace=2,monitor:DVI-D-1
# workspace=4,monitor:DVI-D-1
# workspace=6,monitor:DVI-D-1
# workspace=8,monitor:DVI-D-1
# workspace=10,monitor:DVI-D-1
EOF
            ;;
        "work")
            cat >> "$WORKSPACES_CONF" << EOF
### Home Configuration (disabled)
# Bind workspace 1, 3, 5, etc. to left monitor
# workspace=1,monitor:HDMI-A-3
# workspace=3,monitor:HDMI-A-3
# workspace=5,monitor:HDMI-A-3
# workspace=7,monitor:HDMI-A-3
# workspace=9,monitor:HDMI-A-3
# Bind workspace 2, 4, 6, etc. to right monitor
# workspace=2,monitor:DP-3
# workspace=4,monitor:DP-3
# workspace=6,monitor:DP-3
# workspace=8,monitor:DP-3
# workspace=10,monitor:DP-3
### Office Configuration
# Bind workspace 1, 3, 5, etc. to left monitor
workspace=1,monitor:DP-1
workspace=3,monitor:DP-1
workspace=5,monitor:DP-1
workspace=7,monitor:DP-1
workspace=9,monitor:DP-1
# Bind workspace 2, 4, 6, etc. to right monitor
workspace=2,monitor:DVI-D-1
workspace=4,monitor:DVI-D-1
workspace=6,monitor:DVI-D-1
workspace=8,monitor:DVI-D-1
workspace=10,monitor:DVI-D-1
EOF
            ;;
        *)
            echo "# No specific workspace configuration for unknown location" >> "$WORKSPACES_CONF"
            ;;
    esac
}

# Main execution
main() {
    # Detect location
    location=$(detect_location)
    echo "Detected location: $location"

    # Write configs
    write_monitors_config "$location"
    write_workspaces_config "$location"

    echo "Configuration updated for $location setup (TEST FILES: monitors2.conf & workspaces2.conf)"
    
    # Skip reloading for test - just show what would happen
    if pgrep -x "Hyprland" > /dev/null; then
        echo "Hyprland is running. In production, this would run: hyprctl reload"
        echo "For testing, check the generated files manually."
    else
        echo "Hyprland not running. Configuration written to test files."
    fi
}

# Run with argument support
case "${1:-}" in
    "home"|"work")
        echo "Forcing $1 configuration..."
        write_monitors_config "$1"
        write_workspaces_config "$1"
        if pgrep -x "Hyprland" > /dev/null; then
            hyprctl reload
        fi
        echo "Forced $1 configuration applied (TEST FILES)"
        ;;
    "detect"|"")
        main
        ;;
    *)
        echo "Usage: $0 [home|work|detect]"
        echo "  home   - Force home configuration"
        echo "  work   - Force work configuration"  
        echo "  detect - Auto-detect location (default)"
        exit 1
        ;;
esac